<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DownloadingAdobeFlashPlayer" xml:space="preserve">
    <value>Downloading Adobe Flash Player</value>
  </data>
  <data name="FlashPlayerRequiredMessage" xml:space="preserve">
    <value>BlizzTV requires Abode Flash Player for best user-experience. Do you want to install latest version of Adobe Flash Player now?</value>
  </data>
  <data name="FlashPlayerRequiredTitle" xml:space="preserve">
    <value>Missing component: Adobe Flash Player</value>
  </data>
  <data name="FlashPlayerWillBeInstalledMessage" xml:space="preserve">
    <value>The application will now exit to continue installation of Adobe Flash Player. Please restart BlizzTV after installation finishes.</value>
  </data>
  <data name="DownloadComplete" xml:space="preserve">
    <value>Download Complete</value>
  </data>
  <data name="FlashPlayerDownloadFailedMessage" xml:space="preserve">
    <value>Adobe Flash Player download failed. Please install it manually.</value>
  </data>
  <data name="DownloadFailed" xml:space="preserve">
    <value>Download Failed</value>
  </data>
  <data name="VisualCPP2010RequiredMessage" xml:space="preserve">
    <value>BlizzTV requires Microsoft Visual C++ 2010 redistributable package. Do you want to install it now?</value>
  </data>
  <data name="VisualCPP2010RequiredTitle" xml:space="preserve">
    <value>Missing component: Microsoft Visual C++ 2010 Redistributable Package</value>
  </data>
  <data name="DownloadingVisualCPP2010" xml:space="preserve">
    <value>Downloading Microsoft Visual C++ 2010 redistributable</value>
  </data>
  <data name="VisualCPP2010WillBeInstalledMessage" xml:space="preserve">
    <value>The application will now exit to continue installation of Microsoft Visual C++ 2010 redistributable package. Please restart BlizzTV after installation finishes.</value>
  </data>
  <data name="VisualCPP2010DownloadFailedMessage" xml:space="preserve">
    <value>Microsoft Visual C++ 2010 redistributable download failed. Please install it manually.</value>
  </data>
  <data name="ConnectingDownloadServer" xml:space="preserve">
    <value>Connecting to download server..</value>
  </data>
  <data name="ApplicationWillExitToContinueInstallationOfUpdateMessage" xml:space="preserve">
    <value>The application will exit to continue installation of update. Please restart the application after.</value>
  </data>
  <data name="DownloadedUpdateIsNotValidMessage" xml:space="preserve">
    <value>Downloaded file is not a valid update. Please re-try downloading the update.</value>
  </data>
  <data name="DownloadedUpdateIsNotValidTitle" xml:space="preserve">
    <value>Downloaded file is not a valid update</value>
  </data>
  <data name="DownloadingUpdateTitle" xml:space="preserve">
    <value>Downloading update: {0}</value>
  </data>
  <data name="FailedDownloadingTheUpdateMessage" xml:space="preserve">
    <value>Failed downloading the update. Please try again later.</value>
  </data>
  <data name="FailedDownloadingTheUpdateTitle" xml:space="preserve">
    <value>Update download failed!</value>
  </data>
  <data name="FoundANewUpdateMessage" xml:space="preserve">
    <value>Found a new available {0} version update. Do you want to update now?</value>
  </data>
  <data name="FoundANewUpdateTitle" xml:space="preserve">
    <value>New {0} update found!</value>
  </data>
  <data name="InstallingUpdateTitle" xml:space="preserve">
    <value>Installing Update</value>
  </data>
  <data name="NoAvailableUpdateFoundMessage" xml:space="preserve">
    <value>You're already running the latest version.</value>
  </data>
  <data name="NoAvailableUpdateFoundTitle" xml:space="preserve">
    <value>No available updates found</value>
  </data>
  <data name="UpdateIsBeingInstalledMessage" xml:space="preserve">
    <value>Please wait while update is being installed..</value>
  </data>
  <data name="ErrorLoadingProvidersDatabaseMessage" xml:space="preserve">
    <value>An error occured while loading your providers database. Please re-install the application to fix the problem.</value>
  </data>
  <data name="ErrorLoadingProvidersDatabaseTitle" xml:space="preserve">
    <value>Providers database load error</value>
  </data>
  <data name="ReplacedSubscriptionsDatabaseMessage" xml:space="preserve">
    <value>Replaced your subscriptions database, it should be all working now.</value>
  </data>
  <data name="ReplacedSubscriptionsDatabaseTitle" xml:space="preserve">
    <value>Subscriptions database replaced</value>
  </data>
  <data name="SubscriptionsDatabaseCorruptedMessage" xml:space="preserve">
    <value>Your subscriptions database is corrupted. Do you want it to be replaced with a default one?</value>
  </data>
  <data name="SubscriptionsDatabsaeCorruptedTitle" xml:space="preserve">
    <value>Corrupted subscriptions database</value>
  </data>
  <data name="ExistingAlarmMessage" xml:space="preserve">
    <value>An alarm is set for event {0} minutes before.</value>
  </data>
  <data name="CanNotSetupEventAlarmMessage" xml:space="preserve">
    <value>You can not setup an alarm for the event as it's just about to start</value>
  </data>
  <data name="CanNotSetupEventAlarmTitle" xml:space="preserve">
    <value>Can not setup alarm</value>
  </data>
  <data name="EventInProgressMessage" xml:space="preserve">
    <value>In progress.</value>
  </data>
  <data name="EventOverMessage" xml:space="preserve">
    <value>Over.</value>
  </data>
  <data name="EventUpcomingMessage" xml:space="preserve">
    <value>{0} to go.</value>
  </data>
  <data name="AnAlarmAlreadyExistsForEventMessage" xml:space="preserve">
    <value>An alarm already exists for the event!</value>
  </data>
  <data name="AnAlarmAlreadyExistsForEventTitle" xml:space="preserve">
    <value>Alarm exists</value>
  </data>
  <data name="SetupAlarmTitle" xml:space="preserve">
    <value>Setup alarm for event: {0}</value>
  </data>
  <data name="AddNewFeedMessage" xml:space="preserve">
    <value>Please enter name for the new feed</value>
  </data>
  <data name="AddNewFeedTitle" xml:space="preserve">
    <value>Add New Feed</value>
  </data>
  <data name="FeedAlreadyExistsInSubscriptionsMessage" xml:space="preserve">
    <value>The feed already exists in your subscriptions named as '{0}'.</value>
  </data>
  <data name="FeedAlreadyExistsInSubscriptionsTitle" xml:space="preserve">
    <value>Subscription exists</value>
  </data>
  <data name="AllFieldsRequiredTitle" xml:space="preserve">
    <value>All fields required</value>
  </data>
  <data name="ErrorParsingFeedMessage" xml:space="preserve">
    <value>There was an error parsing the feed. Please check the feed URL and retry.</value>
  </data>
  <data name="ErrorParsingFeedTitle" xml:space="preserve">
    <value>Error parsing feed</value>
  </data>
  <data name="FillTheFeedNameAndUrlFieldsMessage" xml:space="preserve">
    <value>Please fill the feed name and URL fields!</value>
  </data>
  <data name="MarkAllAsRead" xml:space="preserve">
    <value>Mark All As Read</value>
  </data>
  <data name="MarkAllAsUnread" xml:space="preserve">
    <value>Mark All As Unread</value>
  </data>
  <data name="MarkAsRead" xml:space="preserve">
    <value>Mark As Read</value>
  </data>
  <data name="MarkAsUnread" xml:space="preserve">
    <value>Mark As Unread</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="MarkAllAsUnwatched" xml:space="preserve">
    <value>Mark All As Unwatched</value>
  </data>
  <data name="MarkAllAsWatched" xml:space="preserve">
    <value>Mark All As Watched</value>
  </data>
  <data name="MarkAsUnwatched" xml:space="preserve">
    <value>Mark As Unwatched</value>
  </data>
  <data name="MarkAsWatched" xml:space="preserve">
    <value>Mark As Watched</value>
  </data>
</root>